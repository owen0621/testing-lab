name: CI

on:
  push:

permissions:
  contents: write  # 這一行很重要，否則 github-actions 沒權限 push

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd backend
          npm install
          cd ../frontend
          npm install
          npx playwright install chromium

      - name: Run unit and E2E tests
        run: |
          cd backend
          cp .env.sample .env
          npm run test
          cd ../frontend
          npm run test:e2e --project=chromium

      - name: Generate backend coverage report
        run: |
          cd backend
          npm run coverage

      - name: Retrieve previous coverage from artifacts branch
        run: |
          git fetch origin artifacts || echo "artifacts branch not found"
          mkdir -p tmp-artifacts
          if git ls-remote --exit-code origin artifacts; then
            git show origin/artifacts:previous-coverage.txt > tmp-artifacts/previous-coverage.txt || echo "No previous coverage file found"
          fi

      - name: Check coverage
        run: |
          echo "Checking backend coverage..."

          if [ ! -f backend/coverage/coverage-summary.json ]; then
            echo "❌ coverage-summary.json not found!"
            exit 1
          fi

          if [ ! -f tmp-artifacts/previous-coverage.txt ]; then
            echo "⚠️ No previous coverage file found. Skipping comparison."
            exit 0
          fi

          BACKEND_COVERAGE=$(jq '.total.statements.pct' backend/coverage/coverage-summary.json)
          PREVIOUS_BACKEND_COVERAGE=$(grep backend tmp-artifacts/previous-coverage.txt | cut -d' ' -f2)

          echo "Current backend coverage: $BACKEND_COVERAGE"
          echo "Previous backend coverage: $PREVIOUS_BACKEND_COVERAGE"

          if awk "BEGIN {exit !($BACKEND_COVERAGE < $PREVIOUS_BACKEND_COVERAGE)}"; then
            echo "❌ Backend coverage decreased: $BACKEND_COVERAGE < $PREVIOUS_BACKEND_COVERAGE"
            exit 1
          else
            echo "✅ Coverage is acceptable."
          fi

      - name: Save current backend coverage
        run: |
          COVERAGE=$(jq '.total.statements.pct' backend/coverage/coverage-summary.json)
          echo "backend $COVERAGE" > previous-coverage.txt

      - name: Upload coverage to artifacts branch
        run: |
          git config user.name "github-actions"
          git config user.email "action@github.com"
          git fetch origin artifacts || true

          # 暫存 coverage 檔案
          mv previous-coverage.txt /tmp/previous-coverage.txt

          # 切換到 artifacts 分支（存在則 checkout，不存在則用 orphan 建立）
          if git ls-remote --exit-code origin artifacts; then
            git switch -c artifacts origin/artifacts
          else
            git switch --orphan artifacts
            git rm -rf . || true
          fi

          # 還原 coverage 檔案，並 commit 到 artifacts
          mv /tmp/previous-coverage.txt ./previous-coverage.txt
          git add previous-coverage.txt
          git commit -m "Update coverage for $GITHUB_SHA"
          git push --force origin artifacts

      - name: Format and commit backend/frontend code
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          cd backend
          FILES=$(git diff --name-only origin/main | grep -E '\.(js|ts|jsx|tsx|json|css|scss|html|md|yml)$' || true)
          if [ -n "$FILES" ]; then
            echo "$FILES" | xargs npx prettier --check
            if [ $? -ne 0 ]; then
              echo "$FILES" | xargs npx prettier --write
              git add $FILES
              git commit -m "Auto-format backend files"
              git push
            fi
          fi
          cd ..

          cd frontend
          FILES=$(git diff --name-only origin/main | grep -E '\.(js|ts|jsx|tsx|json|css|scss|html|md|yml)$' || true)
          if [ -n "$FILES" ]; then
            echo "$FILES" | xargs npx prettier --check
            if [ $? -ne 0 ]; then
              echo "$FILES" | xargs npx prettier --write
              git add $FILES
              git commit -m "Auto-format frontend files"
              git push
            fi
          fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: backend/coverage/
